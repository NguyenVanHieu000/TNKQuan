#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TNKQ")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAITHI(BAITHI instance);
    partial void UpdateBAITHI(BAITHI instance);
    partial void DeleteBAITHI(BAITHI instance);
    partial void InsertTGTHI(TGTHI instance);
    partial void UpdateTGTHI(TGTHI instance);
    partial void DeleteTGTHI(TGTHI instance);
    partial void InsertCAUHOI(CAUHOI instance);
    partial void UpdateCAUHOI(CAUHOI instance);
    partial void DeleteCAUHOI(CAUHOI instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertCTDTHI(CTDTHI instance);
    partial void UpdateCTDTHI(CTDTHI instance);
    partial void DeleteCTDTHI(CTDTHI instance);
    partial void InsertCTLHPHAN(CTLHPHAN instance);
    partial void UpdateCTLHPHAN(CTLHPHAN instance);
    partial void DeleteCTLHPHAN(CTLHPHAN instance);
    partial void InsertDETHI(DETHI instance);
    partial void UpdateDETHI(DETHI instance);
    partial void DeleteDETHI(DETHI instance);
    partial void InsertGIANGVIEN(GIANGVIEN instance);
    partial void UpdateGIANGVIEN(GIANGVIEN instance);
    partial void DeleteGIANGVIEN(GIANGVIEN instance);
    partial void InsertGVIENCHUCVU(GVIENCHUCVU instance);
    partial void UpdateGVIENCHUCVU(GVIENCHUCVU instance);
    partial void DeleteGVIENCHUCVU(GVIENCHUCVU instance);
    partial void InsertHOCKY(HOCKY instance);
    partial void UpdateHOCKY(HOCKY instance);
    partial void DeleteHOCKY(HOCKY instance);
    partial void InsertKETQUA(KETQUA instance);
    partial void UpdateKETQUA(KETQUA instance);
    partial void DeleteKETQUA(KETQUA instance);
    partial void InsertKHOA(KHOA instance);
    partial void UpdateKHOA(KHOA instance);
    partial void DeleteKHOA(KHOA instance);
    partial void InsertLICHTHI(LICHTHI instance);
    partial void UpdateLICHTHI(LICHTHI instance);
    partial void DeleteLICHTHI(LICHTHI instance);
    partial void InsertLOPHOCPHAN(LOPHOCPHAN instance);
    partial void UpdateLOPHOCPHAN(LOPHOCPHAN instance);
    partial void DeleteLOPHOCPHAN(LOPHOCPHAN instance);
    partial void InsertMANHINH(MANHINH instance);
    partial void UpdateMANHINH(MANHINH instance);
    partial void DeleteMANHINH(MANHINH instance);
    partial void InsertMONHOC(MONHOC instance);
    partial void UpdateMONHOC(MONHOC instance);
    partial void DeleteMONHOC(MONHOC instance);
    partial void InsertMUCDO(MUCDO instance);
    partial void UpdateMUCDO(MUCDO instance);
    partial void DeleteMUCDO(MUCDO instance);
    partial void InsertNHCH(NHCH instance);
    partial void UpdateNHCH(NHCH instance);
    partial void DeleteNHCH(NHCH instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHONGTHI(PHONGTHI instance);
    partial void UpdatePHONGTHI(PHONGTHI instance);
    partial void DeletePHONGTHI(PHONGTHI instance);
    partial void InsertSINHVIEN(SINHVIEN instance);
    partial void UpdateSINHVIEN(SINHVIEN instance);
    partial void DeleteSINHVIEN(SINHVIEN instance);
    #endregion
		
		public DBDataContext() : 
				base(global::BLL_DAL.Properties.Settings.Default.TNKQConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAITHI> BAITHIs
		{
			get
			{
				return this.GetTable<BAITHI>();
			}
		}
		
		public System.Data.Linq.Table<TGTHI> TGTHIs
		{
			get
			{
				return this.GetTable<TGTHI>();
			}
		}
		
		public System.Data.Linq.Table<CAUHOI> CAUHOIs
		{
			get
			{
				return this.GetTable<CAUHOI>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<CTDTHI> CTDTHIs
		{
			get
			{
				return this.GetTable<CTDTHI>();
			}
		}
		
		public System.Data.Linq.Table<CTLHPHAN> CTLHPHANs
		{
			get
			{
				return this.GetTable<CTLHPHAN>();
			}
		}
		
		public System.Data.Linq.Table<DETHI> DETHIs
		{
			get
			{
				return this.GetTable<DETHI>();
			}
		}
		
		public System.Data.Linq.Table<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this.GetTable<GIANGVIEN>();
			}
		}
		
		public System.Data.Linq.Table<GVIENCHUCVU> GVIENCHUCVUs
		{
			get
			{
				return this.GetTable<GVIENCHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<HOCKY> HOCKies
		{
			get
			{
				return this.GetTable<HOCKY>();
			}
		}
		
		public System.Data.Linq.Table<KETQUA> KETQUAs
		{
			get
			{
				return this.GetTable<KETQUA>();
			}
		}
		
		public System.Data.Linq.Table<KHOA> KHOAs
		{
			get
			{
				return this.GetTable<KHOA>();
			}
		}
		
		public System.Data.Linq.Table<LICHTHI> LICHTHIs
		{
			get
			{
				return this.GetTable<LICHTHI>();
			}
		}
		
		public System.Data.Linq.Table<LOPHOCPHAN> LOPHOCPHANs
		{
			get
			{
				return this.GetTable<LOPHOCPHAN>();
			}
		}
		
		public System.Data.Linq.Table<MANHINH> MANHINHs
		{
			get
			{
				return this.GetTable<MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<MONHOC> MONHOCs
		{
			get
			{
				return this.GetTable<MONHOC>();
			}
		}
		
		public System.Data.Linq.Table<MUCDO> MUCDOs
		{
			get
			{
				return this.GetTable<MUCDO>();
			}
		}
		
		public System.Data.Linq.Table<NHCH> NHCHes
		{
			get
			{
				return this.GetTable<NHCH>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHONGTHI> PHONGTHIs
		{
			get
			{
				return this.GetTable<PHONGTHI>();
			}
		}
		
		public System.Data.Linq.Table<SINHVIEN> SINHVIENs
		{
			get
			{
				return this.GetTable<SINHVIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAITHI")]
	public partial class BAITHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_BAITHI;
		
		private string _ID_DETHI;
		
		private string _ID_TGTHI;
		
		private string _CAUTL;
		
		private System.Nullable<int> _TINHTRANG;
		
		private System.Nullable<System.DateTime> _TGBDau;
		
		private System.Nullable<System.DateTime> _TGKT;
		
		private EntitySet<TGTHI> _TGTHIs;
		
		private EntitySet<KETQUA> _KETQUAs;
		
		private EntityRef<TGTHI> _TGTHI;
		
		private EntityRef<DETHI> _DETHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BAITHIChanging(string value);
    partial void OnID_BAITHIChanged();
    partial void OnID_DETHIChanging(string value);
    partial void OnID_DETHIChanged();
    partial void OnID_TGTHIChanging(string value);
    partial void OnID_TGTHIChanged();
    partial void OnCAUTLChanging(string value);
    partial void OnCAUTLChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    partial void OnTGBDauChanging(System.Nullable<System.DateTime> value);
    partial void OnTGBDauChanged();
    partial void OnTGKTChanging(System.Nullable<System.DateTime> value);
    partial void OnTGKTChanged();
    #endregion
		
		public BAITHI()
		{
			this._TGTHIs = new EntitySet<TGTHI>(new Action<TGTHI>(this.attach_TGTHIs), new Action<TGTHI>(this.detach_TGTHIs));
			this._KETQUAs = new EntitySet<KETQUA>(new Action<KETQUA>(this.attach_KETQUAs), new Action<KETQUA>(this.detach_KETQUAs));
			this._TGTHI = default(EntityRef<TGTHI>);
			this._DETHI = default(EntityRef<DETHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BAITHI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_BAITHI
		{
			get
			{
				return this._ID_BAITHI;
			}
			set
			{
				if ((this._ID_BAITHI != value))
				{
					this.OnID_BAITHIChanging(value);
					this.SendPropertyChanging();
					this._ID_BAITHI = value;
					this.SendPropertyChanged("ID_BAITHI");
					this.OnID_BAITHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DETHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_DETHI
		{
			get
			{
				return this._ID_DETHI;
			}
			set
			{
				if ((this._ID_DETHI != value))
				{
					if (this._DETHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DETHIChanging(value);
					this.SendPropertyChanging();
					this._ID_DETHI = value;
					this.SendPropertyChanged("ID_DETHI");
					this.OnID_DETHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TGTHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_TGTHI
		{
			get
			{
				return this._ID_TGTHI;
			}
			set
			{
				if ((this._ID_TGTHI != value))
				{
					if (this._TGTHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TGTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_TGTHI = value;
					this.SendPropertyChanged("ID_TGTHI");
					this.OnID_TGTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUTL", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string CAUTL
		{
			get
			{
				return this._CAUTL;
			}
			set
			{
				if ((this._CAUTL != value))
				{
					this.OnCAUTLChanging(value);
					this.SendPropertyChanging();
					this._CAUTL = value;
					this.SendPropertyChanged("CAUTL");
					this.OnCAUTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGBDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGBDau
		{
			get
			{
				return this._TGBDau;
			}
			set
			{
				if ((this._TGBDau != value))
				{
					this.OnTGBDauChanging(value);
					this.SendPropertyChanging();
					this._TGBDau = value;
					this.SendPropertyChanged("TGBDau");
					this.OnTGBDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGKT
		{
			get
			{
				return this._TGKT;
			}
			set
			{
				if ((this._TGKT != value))
				{
					this.OnTGKTChanging(value);
					this.SendPropertyChanging();
					this._TGKT = value;
					this.SendPropertyChanged("TGKT");
					this.OnTGKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAITHI_TGTHI", Storage="_TGTHIs", ThisKey="ID_BAITHI", OtherKey="ID_BAITHI")]
		public EntitySet<TGTHI> TGTHIs
		{
			get
			{
				return this._TGTHIs;
			}
			set
			{
				this._TGTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAITHI_KETQUA", Storage="_KETQUAs", ThisKey="ID_BAITHI", OtherKey="ID_BAITHI")]
		public EntitySet<KETQUA> KETQUAs
		{
			get
			{
				return this._KETQUAs;
			}
			set
			{
				this._KETQUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGTHI_BAITHI", Storage="_TGTHI", ThisKey="ID_TGTHI", OtherKey="ID_TGTHI", IsForeignKey=true)]
		public TGTHI TGTHI
		{
			get
			{
				return this._TGTHI.Entity;
			}
			set
			{
				TGTHI previousValue = this._TGTHI.Entity;
				if (((previousValue != value) 
							|| (this._TGTHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TGTHI.Entity = null;
						previousValue.BAITHIs.Remove(this);
					}
					this._TGTHI.Entity = value;
					if ((value != null))
					{
						value.BAITHIs.Add(this);
						this._ID_TGTHI = value.ID_TGTHI;
					}
					else
					{
						this._ID_TGTHI = default(string);
					}
					this.SendPropertyChanged("TGTHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_BAITHI", Storage="_DETHI", ThisKey="ID_DETHI", OtherKey="ID_DETHI", IsForeignKey=true)]
		public DETHI DETHI
		{
			get
			{
				return this._DETHI.Entity;
			}
			set
			{
				DETHI previousValue = this._DETHI.Entity;
				if (((previousValue != value) 
							|| (this._DETHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETHI.Entity = null;
						previousValue.BAITHIs.Remove(this);
					}
					this._DETHI.Entity = value;
					if ((value != null))
					{
						value.BAITHIs.Add(this);
						this._ID_DETHI = value.ID_DETHI;
					}
					else
					{
						this._ID_DETHI = default(string);
					}
					this.SendPropertyChanged("DETHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.BAITHI = this;
		}
		
		private void detach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.BAITHI = null;
		}
		
		private void attach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.BAITHI = this;
		}
		
		private void detach_KETQUAs(KETQUA entity)
		{
			this.SendPropertyChanging();
			entity.BAITHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TGTHI")]
	public partial class TGTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_TGTHI;
		
		private System.Nullable<int> _TTRANG;
		
		private string _ID_LICHTHI;
		
		private string _ID_SVIEN;
		
		private string _ID_BAITHI;
		
		private string _ID_PHONGTHI;
		
		private EntitySet<BAITHI> _BAITHIs;
		
		private EntityRef<BAITHI> _BAITHI;
		
		private EntityRef<LICHTHI> _LICHTHI;
		
		private EntityRef<PHONGTHI> _PHONGTHI;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TGTHIChanging(string value);
    partial void OnID_TGTHIChanged();
    partial void OnTTRANGChanging(System.Nullable<int> value);
    partial void OnTTRANGChanged();
    partial void OnID_LICHTHIChanging(string value);
    partial void OnID_LICHTHIChanged();
    partial void OnID_SVIENChanging(string value);
    partial void OnID_SVIENChanged();
    partial void OnID_BAITHIChanging(string value);
    partial void OnID_BAITHIChanged();
    partial void OnID_PHONGTHIChanging(string value);
    partial void OnID_PHONGTHIChanged();
    #endregion
		
		public TGTHI()
		{
			this._BAITHIs = new EntitySet<BAITHI>(new Action<BAITHI>(this.attach_BAITHIs), new Action<BAITHI>(this.detach_BAITHIs));
			this._BAITHI = default(EntityRef<BAITHI>);
			this._LICHTHI = default(EntityRef<LICHTHI>);
			this._PHONGTHI = default(EntityRef<PHONGTHI>);
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TGTHI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_TGTHI
		{
			get
			{
				return this._ID_TGTHI;
			}
			set
			{
				if ((this._ID_TGTHI != value))
				{
					this.OnID_TGTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_TGTHI = value;
					this.SendPropertyChanged("ID_TGTHI");
					this.OnID_TGTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTRANG", DbType="Int")]
		public System.Nullable<int> TTRANG
		{
			get
			{
				return this._TTRANG;
			}
			set
			{
				if ((this._TTRANG != value))
				{
					this.OnTTRANGChanging(value);
					this.SendPropertyChanging();
					this._TTRANG = value;
					this.SendPropertyChanged("TTRANG");
					this.OnTTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LICHTHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_LICHTHI
		{
			get
			{
				return this._ID_LICHTHI;
			}
			set
			{
				if ((this._ID_LICHTHI != value))
				{
					if (this._LICHTHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LICHTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_LICHTHI = value;
					this.SendPropertyChanged("ID_LICHTHI");
					this.OnID_LICHTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SVIEN", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string ID_SVIEN
		{
			get
			{
				return this._ID_SVIEN;
			}
			set
			{
				if ((this._ID_SVIEN != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_SVIEN = value;
					this.SendPropertyChanged("ID_SVIEN");
					this.OnID_SVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BAITHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_BAITHI
		{
			get
			{
				return this._ID_BAITHI;
			}
			set
			{
				if ((this._ID_BAITHI != value))
				{
					if (this._BAITHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BAITHIChanging(value);
					this.SendPropertyChanging();
					this._ID_BAITHI = value;
					this.SendPropertyChanged("ID_BAITHI");
					this.OnID_BAITHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONGTHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_PHONGTHI
		{
			get
			{
				return this._ID_PHONGTHI;
			}
			set
			{
				if ((this._ID_PHONGTHI != value))
				{
					if (this._PHONGTHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PHONGTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONGTHI = value;
					this.SendPropertyChanged("ID_PHONGTHI");
					this.OnID_PHONGTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TGTHI_BAITHI", Storage="_BAITHIs", ThisKey="ID_TGTHI", OtherKey="ID_TGTHI")]
		public EntitySet<BAITHI> BAITHIs
		{
			get
			{
				return this._BAITHIs;
			}
			set
			{
				this._BAITHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAITHI_TGTHI", Storage="_BAITHI", ThisKey="ID_BAITHI", OtherKey="ID_BAITHI", IsForeignKey=true)]
		public BAITHI BAITHI
		{
			get
			{
				return this._BAITHI.Entity;
			}
			set
			{
				BAITHI previousValue = this._BAITHI.Entity;
				if (((previousValue != value) 
							|| (this._BAITHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAITHI.Entity = null;
						previousValue.TGTHIs.Remove(this);
					}
					this._BAITHI.Entity = value;
					if ((value != null))
					{
						value.TGTHIs.Add(this);
						this._ID_BAITHI = value.ID_BAITHI;
					}
					else
					{
						this._ID_BAITHI = default(string);
					}
					this.SendPropertyChanged("BAITHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICHTHI_TGTHI", Storage="_LICHTHI", ThisKey="ID_LICHTHI", OtherKey="ID_LICHTHI", IsForeignKey=true)]
		public LICHTHI LICHTHI
		{
			get
			{
				return this._LICHTHI.Entity;
			}
			set
			{
				LICHTHI previousValue = this._LICHTHI.Entity;
				if (((previousValue != value) 
							|| (this._LICHTHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LICHTHI.Entity = null;
						previousValue.TGTHIs.Remove(this);
					}
					this._LICHTHI.Entity = value;
					if ((value != null))
					{
						value.TGTHIs.Add(this);
						this._ID_LICHTHI = value.ID_LICHTHI;
					}
					else
					{
						this._ID_LICHTHI = default(string);
					}
					this.SendPropertyChanged("LICHTHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGTHI_TGTHI", Storage="_PHONGTHI", ThisKey="ID_PHONGTHI", OtherKey="ID_PHONGTHI", IsForeignKey=true)]
		public PHONGTHI PHONGTHI
		{
			get
			{
				return this._PHONGTHI.Entity;
			}
			set
			{
				PHONGTHI previousValue = this._PHONGTHI.Entity;
				if (((previousValue != value) 
							|| (this._PHONGTHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGTHI.Entity = null;
						previousValue.TGTHIs.Remove(this);
					}
					this._PHONGTHI.Entity = value;
					if ((value != null))
					{
						value.TGTHIs.Add(this);
						this._ID_PHONGTHI = value.ID_PHONGTHI;
					}
					else
					{
						this._ID_PHONGTHI = default(string);
					}
					this.SendPropertyChanged("PHONGTHI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_TGTHI", Storage="_SINHVIEN", ThisKey="ID_SVIEN", OtherKey="ID_SVIEN", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.TGTHIs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.TGTHIs.Add(this);
						this._ID_SVIEN = value.ID_SVIEN;
					}
					else
					{
						this._ID_SVIEN = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAITHIs(BAITHI entity)
		{
			this.SendPropertyChanging();
			entity.TGTHI = this;
		}
		
		private void detach_BAITHIs(BAITHI entity)
		{
			this.SendPropertyChanging();
			entity.TGTHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAUHOI")]
	public partial class CAUHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CAUHOI;
		
		private string _NOIDUNGCH;
		
		private string _DAPAN;
		
		private string _A;
		
		private string _B;
		
		private string _C;
		
		private string _D;
		
		private System.Nullable<int> _CHUONG;
		
		private string _TTrang;
		
		private string _ID_MUCDO;
		
		private string _ID_NHCH;
		
		private EntityRef<MUCDO> _MUCDO;
		
		private EntityRef<NHCH> _NHCH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CAUHOIChanging(string value);
    partial void OnID_CAUHOIChanged();
    partial void OnNOIDUNGCHChanging(string value);
    partial void OnNOIDUNGCHChanged();
    partial void OnDAPANChanging(string value);
    partial void OnDAPANChanged();
    partial void OnAChanging(string value);
    partial void OnAChanged();
    partial void OnBChanging(string value);
    partial void OnBChanged();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void OnDChanging(string value);
    partial void OnDChanged();
    partial void OnCHUONGChanging(System.Nullable<int> value);
    partial void OnCHUONGChanged();
    partial void OnTTrangChanging(string value);
    partial void OnTTrangChanged();
    partial void OnID_MUCDOChanging(string value);
    partial void OnID_MUCDOChanged();
    partial void OnID_NHCHChanging(string value);
    partial void OnID_NHCHChanged();
    #endregion
		
		public CAUHOI()
		{
			this._MUCDO = default(EntityRef<MUCDO>);
			this._NHCH = default(EntityRef<NHCH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CAUHOI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CAUHOI
		{
			get
			{
				return this._ID_CAUHOI;
			}
			set
			{
				if ((this._ID_CAUHOI != value))
				{
					this.OnID_CAUHOIChanging(value);
					this.SendPropertyChanging();
					this._ID_CAUHOI = value;
					this.SendPropertyChanged("ID_CAUHOI");
					this.OnID_CAUHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNGCH", DbType="NVarChar(500)")]
		public string NOIDUNGCH
		{
			get
			{
				return this._NOIDUNGCH;
			}
			set
			{
				if ((this._NOIDUNGCH != value))
				{
					this.OnNOIDUNGCHChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNGCH = value;
					this.SendPropertyChanged("NOIDUNGCH");
					this.OnNOIDUNGCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAPAN", DbType="NVarChar(200)")]
		public string DAPAN
		{
			get
			{
				return this._DAPAN;
			}
			set
			{
				if ((this._DAPAN != value))
				{
					this.OnDAPANChanging(value);
					this.SendPropertyChanging();
					this._DAPAN = value;
					this.SendPropertyChanged("DAPAN");
					this.OnDAPANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="NVarChar(200)")]
		public string A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="NVarChar(200)")]
		public string B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(200)")]
		public string C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="NVarChar(200)")]
		public string D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUONG", DbType="Int")]
		public System.Nullable<int> CHUONG
		{
			get
			{
				return this._CHUONG;
			}
			set
			{
				if ((this._CHUONG != value))
				{
					this.OnCHUONGChanging(value);
					this.SendPropertyChanging();
					this._CHUONG = value;
					this.SendPropertyChanged("CHUONG");
					this.OnCHUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTrang", DbType="NVarChar(50)")]
		public string TTrang
		{
			get
			{
				return this._TTrang;
			}
			set
			{
				if ((this._TTrang != value))
				{
					this.OnTTrangChanging(value);
					this.SendPropertyChanging();
					this._TTrang = value;
					this.SendPropertyChanged("TTrang");
					this.OnTTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MUCDO", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_MUCDO
		{
			get
			{
				return this._ID_MUCDO;
			}
			set
			{
				if ((this._ID_MUCDO != value))
				{
					if (this._MUCDO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MUCDOChanging(value);
					this.SendPropertyChanging();
					this._ID_MUCDO = value;
					this.SendPropertyChanged("ID_MUCDO");
					this.OnID_MUCDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHCH", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_NHCH
		{
			get
			{
				return this._ID_NHCH;
			}
			set
			{
				if ((this._ID_NHCH != value))
				{
					if (this._NHCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHCHChanging(value);
					this.SendPropertyChanging();
					this._ID_NHCH = value;
					this.SendPropertyChanged("ID_NHCH");
					this.OnID_NHCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MUCDO_CAUHOI", Storage="_MUCDO", ThisKey="ID_MUCDO", OtherKey="ID_MUCDO", IsForeignKey=true)]
		public MUCDO MUCDO
		{
			get
			{
				return this._MUCDO.Entity;
			}
			set
			{
				MUCDO previousValue = this._MUCDO.Entity;
				if (((previousValue != value) 
							|| (this._MUCDO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MUCDO.Entity = null;
						previousValue.CAUHOIs.Remove(this);
					}
					this._MUCDO.Entity = value;
					if ((value != null))
					{
						value.CAUHOIs.Add(this);
						this._ID_MUCDO = value.ID_MUCDO;
					}
					else
					{
						this._ID_MUCDO = default(string);
					}
					this.SendPropertyChanged("MUCDO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHCH_CAUHOI", Storage="_NHCH", ThisKey="ID_NHCH", OtherKey="ID_NHCH", IsForeignKey=true)]
		public NHCH NHCH
		{
			get
			{
				return this._NHCH.Entity;
			}
			set
			{
				NHCH previousValue = this._NHCH.Entity;
				if (((previousValue != value) 
							|| (this._NHCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHCH.Entity = null;
						previousValue.CAUHOIs.Remove(this);
					}
					this._NHCH.Entity = value;
					if ((value != null))
					{
						value.CAUHOIs.Add(this);
						this._ID_NHCH = value.ID_NHCH;
					}
					else
					{
						this._ID_NHCH = default(string);
					}
					this.SendPropertyChanged("NHCH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CVU;
		
		private string _TENCVU;
		
		private EntitySet<GIANGVIEN> _GIANGVIENs;
		
		private EntitySet<GVIENCHUCVU> _GVIENCHUCVUs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CVUChanging(string value);
    partial void OnID_CVUChanged();
    partial void OnTENCVUChanging(string value);
    partial void OnTENCVUChanged();
    #endregion
		
		public CHUCVU()
		{
			this._GIANGVIENs = new EntitySet<GIANGVIEN>(new Action<GIANGVIEN>(this.attach_GIANGVIENs), new Action<GIANGVIEN>(this.detach_GIANGVIENs));
			this._GVIENCHUCVUs = new EntitySet<GVIENCHUCVU>(new Action<GVIENCHUCVU>(this.attach_GVIENCHUCVUs), new Action<GVIENCHUCVU>(this.detach_GVIENCHUCVUs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CVU", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CVU
		{
			get
			{
				return this._ID_CVU;
			}
			set
			{
				if ((this._ID_CVU != value))
				{
					this.OnID_CVUChanging(value);
					this.SendPropertyChanging();
					this._ID_CVU = value;
					this.SendPropertyChanged("ID_CVU");
					this.OnID_CVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCVU", DbType="NVarChar(50)")]
		public string TENCVU
		{
			get
			{
				return this._TENCVU;
			}
			set
			{
				if ((this._TENCVU != value))
				{
					this.OnTENCVUChanging(value);
					this.SendPropertyChanging();
					this._TENCVU = value;
					this.SendPropertyChanged("TENCVU");
					this.OnTENCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_GIANGVIEN", Storage="_GIANGVIENs", ThisKey="ID_CVU", OtherKey="ID_CVU")]
		public EntitySet<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this._GIANGVIENs;
			}
			set
			{
				this._GIANGVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_GVIENCHUCVU", Storage="_GVIENCHUCVUs", ThisKey="ID_CVU", OtherKey="ID_CVU")]
		public EntitySet<GVIENCHUCVU> GVIENCHUCVUs
		{
			get
			{
				return this._GVIENCHUCVUs;
			}
			set
			{
				this._GVIENCHUCVUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="ID_CVU", OtherKey="ID_CVU")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
		
		private void attach_GVIENCHUCVUs(GVIENCHUCVU entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_GVIENCHUCVUs(GVIENCHUCVU entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDTHI")]
	public partial class CTDTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CTDTHI;
		
		private string _ID_DTHI;
		
		private string _CAUHOI;
		
		private string _A;
		
		private string _B;
		
		private string _C;
		
		private string _D;
		
		private string _DapAn;
		
		private EntityRef<DETHI> _DETHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTDTHIChanging(string value);
    partial void OnID_CTDTHIChanged();
    partial void OnID_DTHIChanging(string value);
    partial void OnID_DTHIChanged();
    partial void OnCAUHOIChanging(string value);
    partial void OnCAUHOIChanged();
    partial void OnAChanging(string value);
    partial void OnAChanged();
    partial void OnBChanging(string value);
    partial void OnBChanged();
    partial void OnCChanging(string value);
    partial void OnCChanged();
    partial void OnDChanging(string value);
    partial void OnDChanged();
    partial void OnDapAnChanging(string value);
    partial void OnDapAnChanged();
    #endregion
		
		public CTDTHI()
		{
			this._DETHI = default(EntityRef<DETHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTDTHI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CTDTHI
		{
			get
			{
				return this._ID_CTDTHI;
			}
			set
			{
				if ((this._ID_CTDTHI != value))
				{
					this.OnID_CTDTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_CTDTHI = value;
					this.SendPropertyChanged("ID_CTDTHI");
					this.OnID_CTDTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DTHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_DTHI
		{
			get
			{
				return this._ID_DTHI;
			}
			set
			{
				if ((this._ID_DTHI != value))
				{
					if (this._DETHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_DTHI = value;
					this.SendPropertyChanged("ID_DTHI");
					this.OnID_DTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAUHOI", DbType="NVarChar(500)")]
		public string CAUHOI
		{
			get
			{
				return this._CAUHOI;
			}
			set
			{
				if ((this._CAUHOI != value))
				{
					this.OnCAUHOIChanging(value);
					this.SendPropertyChanging();
					this._CAUHOI = value;
					this.SendPropertyChanged("CAUHOI");
					this.OnCAUHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="NVarChar(200)")]
		public string A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B", DbType="NVarChar(200)")]
		public string B
		{
			get
			{
				return this._B;
			}
			set
			{
				if ((this._B != value))
				{
					this.OnBChanging(value);
					this.SendPropertyChanging();
					this._B = value;
					this.SendPropertyChanged("B");
					this.OnBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C", DbType="NVarChar(200)")]
		public string C
		{
			get
			{
				return this._C;
			}
			set
			{
				if ((this._C != value))
				{
					this.OnCChanging(value);
					this.SendPropertyChanging();
					this._C = value;
					this.SendPropertyChanged("C");
					this.OnCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="NVarChar(200)")]
		public string D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="NVarChar(200)")]
		public string DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_CTDTHI", Storage="_DETHI", ThisKey="ID_DTHI", OtherKey="ID_DETHI", IsForeignKey=true)]
		public DETHI DETHI
		{
			get
			{
				return this._DETHI.Entity;
			}
			set
			{
				DETHI previousValue = this._DETHI.Entity;
				if (((previousValue != value) 
							|| (this._DETHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETHI.Entity = null;
						previousValue.CTDTHIs.Remove(this);
					}
					this._DETHI.Entity = value;
					if ((value != null))
					{
						value.CTDTHIs.Add(this);
						this._ID_DTHI = value.ID_DETHI;
					}
					else
					{
						this._ID_DTHI = default(string);
					}
					this.SendPropertyChanged("DETHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTLHPHAN")]
	public partial class CTLHPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CTLHPHAN;
		
		private string _ID_SVIEN;
		
		private string _ID_LOPHP;
		
		private EntityRef<LOPHOCPHAN> _LOPHOCPHAN;
		
		private EntityRef<SINHVIEN> _SINHVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTLHPHANChanging(string value);
    partial void OnID_CTLHPHANChanged();
    partial void OnID_SVIENChanging(string value);
    partial void OnID_SVIENChanged();
    partial void OnID_LOPHPChanging(string value);
    partial void OnID_LOPHPChanged();
    #endregion
		
		public CTLHPHAN()
		{
			this._LOPHOCPHAN = default(EntityRef<LOPHOCPHAN>);
			this._SINHVIEN = default(EntityRef<SINHVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTLHPHAN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CTLHPHAN
		{
			get
			{
				return this._ID_CTLHPHAN;
			}
			set
			{
				if ((this._ID_CTLHPHAN != value))
				{
					this.OnID_CTLHPHANChanging(value);
					this.SendPropertyChanging();
					this._ID_CTLHPHAN = value;
					this.SendPropertyChanged("ID_CTLHPHAN");
					this.OnID_CTLHPHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SVIEN", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string ID_SVIEN
		{
			get
			{
				return this._ID_SVIEN;
			}
			set
			{
				if ((this._ID_SVIEN != value))
				{
					if (this._SINHVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_SVIEN = value;
					this.SendPropertyChanged("ID_SVIEN");
					this.OnID_SVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOPHP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_LOPHP
		{
			get
			{
				return this._ID_LOPHP;
			}
			set
			{
				if ((this._ID_LOPHP != value))
				{
					if (this._LOPHOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOPHPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOPHP = value;
					this.SendPropertyChanged("ID_LOPHP");
					this.OnID_LOPHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_CTLHPHAN", Storage="_LOPHOCPHAN", ThisKey="ID_LOPHP", OtherKey="ID_LOPHP", IsForeignKey=true)]
		public LOPHOCPHAN LOPHOCPHAN
		{
			get
			{
				return this._LOPHOCPHAN.Entity;
			}
			set
			{
				LOPHOCPHAN previousValue = this._LOPHOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOCPHAN.Entity = null;
						previousValue.CTLHPHANs.Remove(this);
					}
					this._LOPHOCPHAN.Entity = value;
					if ((value != null))
					{
						value.CTLHPHANs.Add(this);
						this._ID_LOPHP = value.ID_LOPHP;
					}
					else
					{
						this._ID_LOPHP = default(string);
					}
					this.SendPropertyChanged("LOPHOCPHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_CTLHPHAN", Storage="_SINHVIEN", ThisKey="ID_SVIEN", OtherKey="ID_SVIEN", IsForeignKey=true)]
		public SINHVIEN SINHVIEN
		{
			get
			{
				return this._SINHVIEN.Entity;
			}
			set
			{
				SINHVIEN previousValue = this._SINHVIEN.Entity;
				if (((previousValue != value) 
							|| (this._SINHVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SINHVIEN.Entity = null;
						previousValue.CTLHPHANs.Remove(this);
					}
					this._SINHVIEN.Entity = value;
					if ((value != null))
					{
						value.CTLHPHANs.Add(this);
						this._ID_SVIEN = value.ID_SVIEN;
					}
					else
					{
						this._ID_SVIEN = default(string);
					}
					this.SendPropertyChanged("SINHVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETHI")]
	public partial class DETHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DETHI;
		
		private string _TENDETHI;
		
		private System.Nullable<int> _SLCAU;
		
		private System.Nullable<int> _TGLamBai;
		
		private string _GhiChu;
		
		private string _ID_NHCH;
		
		private string _ID_GVIEN;
		
		private EntitySet<BAITHI> _BAITHIs;
		
		private EntitySet<CTDTHI> _CTDTHIs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<NHCH> _NHCH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DETHIChanging(string value);
    partial void OnID_DETHIChanged();
    partial void OnTENDETHIChanging(string value);
    partial void OnTENDETHIChanged();
    partial void OnSLCAUChanging(System.Nullable<int> value);
    partial void OnSLCAUChanged();
    partial void OnTGLamBaiChanging(System.Nullable<int> value);
    partial void OnTGLamBaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnID_NHCHChanging(string value);
    partial void OnID_NHCHChanged();
    partial void OnID_GVIENChanging(string value);
    partial void OnID_GVIENChanged();
    #endregion
		
		public DETHI()
		{
			this._BAITHIs = new EntitySet<BAITHI>(new Action<BAITHI>(this.attach_BAITHIs), new Action<BAITHI>(this.detach_BAITHIs));
			this._CTDTHIs = new EntitySet<CTDTHI>(new Action<CTDTHI>(this.attach_CTDTHIs), new Action<CTDTHI>(this.detach_CTDTHIs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._NHCH = default(EntityRef<NHCH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DETHI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DETHI
		{
			get
			{
				return this._ID_DETHI;
			}
			set
			{
				if ((this._ID_DETHI != value))
				{
					this.OnID_DETHIChanging(value);
					this.SendPropertyChanging();
					this._ID_DETHI = value;
					this.SendPropertyChanged("ID_DETHI");
					this.OnID_DETHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDETHI", DbType="NVarChar(50)")]
		public string TENDETHI
		{
			get
			{
				return this._TENDETHI;
			}
			set
			{
				if ((this._TENDETHI != value))
				{
					this.OnTENDETHIChanging(value);
					this.SendPropertyChanging();
					this._TENDETHI = value;
					this.SendPropertyChanged("TENDETHI");
					this.OnTENDETHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLCAU", DbType="Int")]
		public System.Nullable<int> SLCAU
		{
			get
			{
				return this._SLCAU;
			}
			set
			{
				if ((this._SLCAU != value))
				{
					this.OnSLCAUChanging(value);
					this.SendPropertyChanging();
					this._SLCAU = value;
					this.SendPropertyChanged("SLCAU");
					this.OnSLCAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGLamBai", DbType="Int")]
		public System.Nullable<int> TGLamBai
		{
			get
			{
				return this._TGLamBai;
			}
			set
			{
				if ((this._TGLamBai != value))
				{
					this.OnTGLamBaiChanging(value);
					this.SendPropertyChanging();
					this._TGLamBai = value;
					this.SendPropertyChanged("TGLamBai");
					this.OnTGLamBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHCH", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_NHCH
		{
			get
			{
				return this._ID_NHCH;
			}
			set
			{
				if ((this._ID_NHCH != value))
				{
					if (this._NHCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHCHChanging(value);
					this.SendPropertyChanging();
					this._ID_NHCH = value;
					this.SendPropertyChanged("ID_NHCH");
					this.OnID_NHCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GVIEN", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_GVIEN
		{
			get
			{
				return this._ID_GVIEN;
			}
			set
			{
				if ((this._ID_GVIEN != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_GVIEN = value;
					this.SendPropertyChanged("ID_GVIEN");
					this.OnID_GVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_BAITHI", Storage="_BAITHIs", ThisKey="ID_DETHI", OtherKey="ID_DETHI")]
		public EntitySet<BAITHI> BAITHIs
		{
			get
			{
				return this._BAITHIs;
			}
			set
			{
				this._BAITHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETHI_CTDTHI", Storage="_CTDTHIs", ThisKey="ID_DETHI", OtherKey="ID_DTHI")]
		public EntitySet<CTDTHI> CTDTHIs
		{
			get
			{
				return this._CTDTHIs;
			}
			set
			{
				this._CTDTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DETHI", Storage="_GIANGVIEN", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.DETHIs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.DETHIs.Add(this);
						this._ID_GVIEN = value.ID_GVIEN;
					}
					else
					{
						this._ID_GVIEN = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHCH_DETHI", Storage="_NHCH", ThisKey="ID_NHCH", OtherKey="ID_NHCH", IsForeignKey=true)]
		public NHCH NHCH
		{
			get
			{
				return this._NHCH.Entity;
			}
			set
			{
				NHCH previousValue = this._NHCH.Entity;
				if (((previousValue != value) 
							|| (this._NHCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHCH.Entity = null;
						previousValue.DETHIs.Remove(this);
					}
					this._NHCH.Entity = value;
					if ((value != null))
					{
						value.DETHIs.Add(this);
						this._ID_NHCH = value.ID_NHCH;
					}
					else
					{
						this._ID_NHCH = default(string);
					}
					this.SendPropertyChanged("NHCH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAITHIs(BAITHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = this;
		}
		
		private void detach_BAITHIs(BAITHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = null;
		}
		
		private void attach_CTDTHIs(CTDTHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = this;
		}
		
		private void detach_CTDTHIs(CTDTHI entity)
		{
			this.SendPropertyChanging();
			entity.DETHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIANGVIEN")]
	public partial class GIANGVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_GVIEN;
		
		private string _PASSGV;
		
		private string _TENGV;
		
		private string _HINHGV;
		
		private System.Nullable<System.DateTime> _NAMSINH;
		
		private string _GIOITINH;
		
		private string _CHUYENMON;
		
		private string _TDHOCVAN;
		
		private string _ID_CVU;
		
		private string _ID_KHOA;
		
		private EntitySet<DETHI> _DETHIs;
		
		private EntitySet<GVIENCHUCVU> _GVIENCHUCVUs;
		
		private EntitySet<LICHTHI> _LICHTHIs;
		
		private EntitySet<LOPHOCPHAN> _LOPHOCPHANs;
		
		private EntitySet<NHCH> _NHCHes;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<KHOA> _KHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_GVIENChanging(string value);
    partial void OnID_GVIENChanged();
    partial void OnPASSGVChanging(string value);
    partial void OnPASSGVChanged();
    partial void OnTENGVChanging(string value);
    partial void OnTENGVChanged();
    partial void OnHINHGVChanging(string value);
    partial void OnHINHGVChanged();
    partial void OnNAMSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNAMSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnCHUYENMONChanging(string value);
    partial void OnCHUYENMONChanged();
    partial void OnTDHOCVANChanging(string value);
    partial void OnTDHOCVANChanged();
    partial void OnID_CVUChanging(string value);
    partial void OnID_CVUChanged();
    partial void OnID_KHOAChanging(string value);
    partial void OnID_KHOAChanged();
    #endregion
		
		public GIANGVIEN()
		{
			this._DETHIs = new EntitySet<DETHI>(new Action<DETHI>(this.attach_DETHIs), new Action<DETHI>(this.detach_DETHIs));
			this._GVIENCHUCVUs = new EntitySet<GVIENCHUCVU>(new Action<GVIENCHUCVU>(this.attach_GVIENCHUCVUs), new Action<GVIENCHUCVU>(this.detach_GVIENCHUCVUs));
			this._LICHTHIs = new EntitySet<LICHTHI>(new Action<LICHTHI>(this.attach_LICHTHIs), new Action<LICHTHI>(this.detach_LICHTHIs));
			this._LOPHOCPHANs = new EntitySet<LOPHOCPHAN>(new Action<LOPHOCPHAN>(this.attach_LOPHOCPHANs), new Action<LOPHOCPHAN>(this.detach_LOPHOCPHANs));
			this._NHCHes = new EntitySet<NHCH>(new Action<NHCH>(this.attach_NHCHes), new Action<NHCH>(this.detach_NHCHes));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._KHOA = default(EntityRef<KHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GVIEN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_GVIEN
		{
			get
			{
				return this._ID_GVIEN;
			}
			set
			{
				if ((this._ID_GVIEN != value))
				{
					this.OnID_GVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_GVIEN = value;
					this.SendPropertyChanged("ID_GVIEN");
					this.OnID_GVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSGV", DbType="NVarChar(30)")]
		public string PASSGV
		{
			get
			{
				return this._PASSGV;
			}
			set
			{
				if ((this._PASSGV != value))
				{
					this.OnPASSGVChanging(value);
					this.SendPropertyChanging();
					this._PASSGV = value;
					this.SendPropertyChanged("PASSGV");
					this.OnPASSGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENGV", DbType="NVarChar(50)")]
		public string TENGV
		{
			get
			{
				return this._TENGV;
			}
			set
			{
				if ((this._TENGV != value))
				{
					this.OnTENGVChanging(value);
					this.SendPropertyChanging();
					this._TENGV = value;
					this.SendPropertyChanged("TENGV");
					this.OnTENGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHGV", DbType="NVarChar(100)")]
		public string HINHGV
		{
			get
			{
				return this._HINHGV;
			}
			set
			{
				if ((this._HINHGV != value))
				{
					this.OnHINHGVChanging(value);
					this.SendPropertyChanging();
					this._HINHGV = value;
					this.SendPropertyChanged("HINHGV");
					this.OnHINHGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NAMSINH
		{
			get
			{
				return this._NAMSINH;
			}
			set
			{
				if ((this._NAMSINH != value))
				{
					this.OnNAMSINHChanging(value);
					this.SendPropertyChanging();
					this._NAMSINH = value;
					this.SendPropertyChanged("NAMSINH");
					this.OnNAMSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUYENMON", DbType="NVarChar(50)")]
		public string CHUYENMON
		{
			get
			{
				return this._CHUYENMON;
			}
			set
			{
				if ((this._CHUYENMON != value))
				{
					this.OnCHUYENMONChanging(value);
					this.SendPropertyChanging();
					this._CHUYENMON = value;
					this.SendPropertyChanged("CHUYENMON");
					this.OnCHUYENMONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDHOCVAN", DbType="NVarChar(50)")]
		public string TDHOCVAN
		{
			get
			{
				return this._TDHOCVAN;
			}
			set
			{
				if ((this._TDHOCVAN != value))
				{
					this.OnTDHOCVANChanging(value);
					this.SendPropertyChanging();
					this._TDHOCVAN = value;
					this.SendPropertyChanged("TDHOCVAN");
					this.OnTDHOCVANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CVU", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_CVU
		{
			get
			{
				return this._ID_CVU;
			}
			set
			{
				if ((this._ID_CVU != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CVUChanging(value);
					this.SendPropertyChanging();
					this._ID_CVU = value;
					this.SendPropertyChanged("ID_CVU");
					this.OnID_CVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOA", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_KHOA
		{
			get
			{
				return this._ID_KHOA;
			}
			set
			{
				if ((this._ID_KHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOAChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOA = value;
					this.SendPropertyChanged("ID_KHOA");
					this.OnID_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_DETHI", Storage="_DETHIs", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN")]
		public EntitySet<DETHI> DETHIs
		{
			get
			{
				return this._DETHIs;
			}
			set
			{
				this._DETHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_GVIENCHUCVU", Storage="_GVIENCHUCVUs", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN")]
		public EntitySet<GVIENCHUCVU> GVIENCHUCVUs
		{
			get
			{
				return this._GVIENCHUCVUs;
			}
			set
			{
				this._GVIENCHUCVUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LICHTHI", Storage="_LICHTHIs", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN")]
		public EntitySet<LICHTHI> LICHTHIs
		{
			get
			{
				return this._LICHTHIs;
			}
			set
			{
				this._LICHTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LOPHOCPHAN", Storage="_LOPHOCPHANs", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN")]
		public EntitySet<LOPHOCPHAN> LOPHOCPHANs
		{
			get
			{
				return this._LOPHOCPHANs;
			}
			set
			{
				this._LOPHOCPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_NHCH", Storage="_NHCHes", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN")]
		public EntitySet<NHCH> NHCHes
		{
			get
			{
				return this._NHCHes;
			}
			set
			{
				this._NHCHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_GIANGVIEN", Storage="_CHUCVU", ThisKey="ID_CVU", OtherKey="ID_CVU", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.GIANGVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.GIANGVIENs.Add(this);
						this._ID_CVU = value.ID_CVU;
					}
					else
					{
						this._ID_CVU = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_GIANGVIEN", Storage="_KHOA", ThisKey="ID_KHOA", OtherKey="ID_KHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.GIANGVIENs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.GIANGVIENs.Add(this);
						this._ID_KHOA = value.ID_KHOA;
					}
					else
					{
						this._ID_KHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETHIs(DETHI entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_DETHIs(DETHI entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_GVIENCHUCVUs(GVIENCHUCVU entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_GVIENCHUCVUs(GVIENCHUCVU entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_LOPHOCPHANs(LOPHOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_LOPHOCPHANs(LOPHOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
		
		private void attach_NHCHes(NHCH entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = this;
		}
		
		private void detach_NHCHes(NHCH entity)
		{
			this.SendPropertyChanging();
			entity.GIANGVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GVIENCHUCVU")]
	public partial class GVIENCHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CVU;
		
		private string _ID_GVIEN;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CVUChanging(string value);
    partial void OnID_CVUChanged();
    partial void OnID_GVIENChanging(string value);
    partial void OnID_GVIENChanged();
    #endregion
		
		public GVIENCHUCVU()
		{
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CVU", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CVU
		{
			get
			{
				return this._ID_CVU;
			}
			set
			{
				if ((this._ID_CVU != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CVUChanging(value);
					this.SendPropertyChanging();
					this._ID_CVU = value;
					this.SendPropertyChanged("ID_CVU");
					this.OnID_CVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GVIEN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_GVIEN
		{
			get
			{
				return this._ID_GVIEN;
			}
			set
			{
				if ((this._ID_GVIEN != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_GVIEN = value;
					this.SendPropertyChanged("ID_GVIEN");
					this.OnID_GVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_GVIENCHUCVU", Storage="_GIANGVIEN", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.GVIENCHUCVUs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.GVIENCHUCVUs.Add(this);
						this._ID_GVIEN = value.ID_GVIEN;
					}
					else
					{
						this._ID_GVIEN = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_GVIENCHUCVU", Storage="_CHUCVU", ThisKey="ID_CVU", OtherKey="ID_CVU", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.GVIENCHUCVUs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.GVIENCHUCVUs.Add(this);
						this._ID_CVU = value.ID_CVU;
					}
					else
					{
						this._ID_CVU = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOCKY")]
	public partial class HOCKY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_HOCKY;
		
		private string _TENHK;
		
		private string _NIENKHOA;
		
		private EntitySet<LOPHOCPHAN> _LOPHOCPHANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HOCKYChanging(string value);
    partial void OnID_HOCKYChanged();
    partial void OnTENHKChanging(string value);
    partial void OnTENHKChanged();
    partial void OnNIENKHOAChanging(string value);
    partial void OnNIENKHOAChanged();
    #endregion
		
		public HOCKY()
		{
			this._LOPHOCPHANs = new EntitySet<LOPHOCPHAN>(new Action<LOPHOCPHAN>(this.attach_LOPHOCPHANs), new Action<LOPHOCPHAN>(this.detach_LOPHOCPHANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HOCKY", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HOCKY
		{
			get
			{
				return this._ID_HOCKY;
			}
			set
			{
				if ((this._ID_HOCKY != value))
				{
					this.OnID_HOCKYChanging(value);
					this.SendPropertyChanging();
					this._ID_HOCKY = value;
					this.SendPropertyChanged("ID_HOCKY");
					this.OnID_HOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHK", DbType="NVarChar(50)")]
		public string TENHK
		{
			get
			{
				return this._TENHK;
			}
			set
			{
				if ((this._TENHK != value))
				{
					this.OnTENHKChanging(value);
					this.SendPropertyChanging();
					this._TENHK = value;
					this.SendPropertyChanged("TENHK");
					this.OnTENHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIENKHOA", DbType="NVarChar(50)")]
		public string NIENKHOA
		{
			get
			{
				return this._NIENKHOA;
			}
			set
			{
				if ((this._NIENKHOA != value))
				{
					this.OnNIENKHOAChanging(value);
					this.SendPropertyChanging();
					this._NIENKHOA = value;
					this.SendPropertyChanged("NIENKHOA");
					this.OnNIENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_LOPHOCPHAN", Storage="_LOPHOCPHANs", ThisKey="ID_HOCKY", OtherKey="ID_HOCKY")]
		public EntitySet<LOPHOCPHAN> LOPHOCPHANs
		{
			get
			{
				return this._LOPHOCPHANs;
			}
			set
			{
				this._LOPHOCPHANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPHOCPHANs(LOPHOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = this;
		}
		
		private void detach_LOPHOCPHANs(LOPHOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.HOCKY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KETQUA")]
	public partial class KETQUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KQUA;
		
		private System.Nullable<double> _DIEMTHI;
		
		private System.Nullable<int> _SLCAUDUNG;
		
		private string _ID_BAITHI;
		
		private EntityRef<BAITHI> _BAITHI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KQUAChanging(string value);
    partial void OnID_KQUAChanged();
    partial void OnDIEMTHIChanging(System.Nullable<double> value);
    partial void OnDIEMTHIChanged();
    partial void OnSLCAUDUNGChanging(System.Nullable<int> value);
    partial void OnSLCAUDUNGChanged();
    partial void OnID_BAITHIChanging(string value);
    partial void OnID_BAITHIChanged();
    #endregion
		
		public KETQUA()
		{
			this._BAITHI = default(EntityRef<BAITHI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KQUA", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KQUA
		{
			get
			{
				return this._ID_KQUA;
			}
			set
			{
				if ((this._ID_KQUA != value))
				{
					this.OnID_KQUAChanging(value);
					this.SendPropertyChanging();
					this._ID_KQUA = value;
					this.SendPropertyChanged("ID_KQUA");
					this.OnID_KQUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEMTHI", DbType="Float")]
		public System.Nullable<double> DIEMTHI
		{
			get
			{
				return this._DIEMTHI;
			}
			set
			{
				if ((this._DIEMTHI != value))
				{
					this.OnDIEMTHIChanging(value);
					this.SendPropertyChanging();
					this._DIEMTHI = value;
					this.SendPropertyChanged("DIEMTHI");
					this.OnDIEMTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLCAUDUNG", DbType="Int")]
		public System.Nullable<int> SLCAUDUNG
		{
			get
			{
				return this._SLCAUDUNG;
			}
			set
			{
				if ((this._SLCAUDUNG != value))
				{
					this.OnSLCAUDUNGChanging(value);
					this.SendPropertyChanging();
					this._SLCAUDUNG = value;
					this.SendPropertyChanged("SLCAUDUNG");
					this.OnSLCAUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BAITHI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_BAITHI
		{
			get
			{
				return this._ID_BAITHI;
			}
			set
			{
				if ((this._ID_BAITHI != value))
				{
					if (this._BAITHI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BAITHIChanging(value);
					this.SendPropertyChanging();
					this._ID_BAITHI = value;
					this.SendPropertyChanged("ID_BAITHI");
					this.OnID_BAITHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BAITHI_KETQUA", Storage="_BAITHI", ThisKey="ID_BAITHI", OtherKey="ID_BAITHI", IsForeignKey=true)]
		public BAITHI BAITHI
		{
			get
			{
				return this._BAITHI.Entity;
			}
			set
			{
				BAITHI previousValue = this._BAITHI.Entity;
				if (((previousValue != value) 
							|| (this._BAITHI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BAITHI.Entity = null;
						previousValue.KETQUAs.Remove(this);
					}
					this._BAITHI.Entity = value;
					if ((value != null))
					{
						value.KETQUAs.Add(this);
						this._ID_BAITHI = value.ID_BAITHI;
					}
					else
					{
						this._ID_BAITHI = default(string);
					}
					this.SendPropertyChanged("BAITHI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHOA")]
	public partial class KHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_KHOA;
		
		private string _TENKHOA;
		
		private string _DIADIEM;
		
		private EntitySet<GIANGVIEN> _GIANGVIENs;
		
		private EntitySet<MONHOC> _MONHOCs;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHOAChanging(string value);
    partial void OnID_KHOAChanged();
    partial void OnTENKHOAChanging(string value);
    partial void OnTENKHOAChanged();
    partial void OnDIADIEMChanging(string value);
    partial void OnDIADIEMChanged();
    #endregion
		
		public KHOA()
		{
			this._GIANGVIENs = new EntitySet<GIANGVIEN>(new Action<GIANGVIEN>(this.attach_GIANGVIENs), new Action<GIANGVIEN>(this.detach_GIANGVIENs));
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOA", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_KHOA
		{
			get
			{
				return this._ID_KHOA;
			}
			set
			{
				if ((this._ID_KHOA != value))
				{
					this.OnID_KHOAChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOA = value;
					this.SendPropertyChanged("ID_KHOA");
					this.OnID_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHOA", DbType="NVarChar(50)")]
		public string TENKHOA
		{
			get
			{
				return this._TENKHOA;
			}
			set
			{
				if ((this._TENKHOA != value))
				{
					this.OnTENKHOAChanging(value);
					this.SendPropertyChanging();
					this._TENKHOA = value;
					this.SendPropertyChanged("TENKHOA");
					this.OnTENKHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIADIEM", DbType="NVarChar(200)")]
		public string DIADIEM
		{
			get
			{
				return this._DIADIEM;
			}
			set
			{
				if ((this._DIADIEM != value))
				{
					this.OnDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._DIADIEM = value;
					this.SendPropertyChanged("DIADIEM");
					this.OnDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_GIANGVIEN", Storage="_GIANGVIENs", ThisKey="ID_KHOA", OtherKey="ID_KHOA")]
		public EntitySet<GIANGVIEN> GIANGVIENs
		{
			get
			{
				return this._GIANGVIENs;
			}
			set
			{
				this._GIANGVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_MONHOC", Storage="_MONHOCs", ThisKey="ID_KHOA", OtherKey="ID_KHOA")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_SINHVIEN", Storage="_SINHVIENs", ThisKey="ID_KHOA", OtherKey="ID_KHOA")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_GIANGVIENs(GIANGVIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICHTHI")]
	public partial class LICHTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LICHTHI;
		
		private string _TENLICHTHI;
		
		private System.Nullable<System.DateTime> _NGAYTAO;
		
		private System.Nullable<System.DateTime> _NGAYTHI;
		
		private string _Tiet;
		
		private string _ID_GVIEN;
		
		private string _ID_LOPHP;
		
		private EntitySet<TGTHI> _TGTHIs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<LOPHOCPHAN> _LOPHOCPHAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LICHTHIChanging(string value);
    partial void OnID_LICHTHIChanged();
    partial void OnTENLICHTHIChanging(string value);
    partial void OnTENLICHTHIChanged();
    partial void OnNGAYTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTAOChanged();
    partial void OnNGAYTHIChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTHIChanged();
    partial void OnTietChanging(string value);
    partial void OnTietChanged();
    partial void OnID_GVIENChanging(string value);
    partial void OnID_GVIENChanged();
    partial void OnID_LOPHPChanging(string value);
    partial void OnID_LOPHPChanged();
    #endregion
		
		public LICHTHI()
		{
			this._TGTHIs = new EntitySet<TGTHI>(new Action<TGTHI>(this.attach_TGTHIs), new Action<TGTHI>(this.detach_TGTHIs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._LOPHOCPHAN = default(EntityRef<LOPHOCPHAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LICHTHI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LICHTHI
		{
			get
			{
				return this._ID_LICHTHI;
			}
			set
			{
				if ((this._ID_LICHTHI != value))
				{
					this.OnID_LICHTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_LICHTHI = value;
					this.SendPropertyChanged("ID_LICHTHI");
					this.OnID_LICHTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLICHTHI", DbType="NVarChar(50)")]
		public string TENLICHTHI
		{
			get
			{
				return this._TENLICHTHI;
			}
			set
			{
				if ((this._TENLICHTHI != value))
				{
					this.OnTENLICHTHIChanging(value);
					this.SendPropertyChanging();
					this._TENLICHTHI = value;
					this.SendPropertyChanged("TENLICHTHI");
					this.OnTENLICHTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYTAO
		{
			get
			{
				return this._NGAYTAO;
			}
			set
			{
				if ((this._NGAYTAO != value))
				{
					this.OnNGAYTAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYTAO = value;
					this.SendPropertyChanged("NGAYTAO");
					this.OnNGAYTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTHI", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTHI
		{
			get
			{
				return this._NGAYTHI;
			}
			set
			{
				if ((this._NGAYTHI != value))
				{
					this.OnNGAYTHIChanging(value);
					this.SendPropertyChanging();
					this._NGAYTHI = value;
					this.SendPropertyChanged("NGAYTHI");
					this.OnNGAYTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiet", DbType="NVarChar(10)")]
		public string Tiet
		{
			get
			{
				return this._Tiet;
			}
			set
			{
				if ((this._Tiet != value))
				{
					this.OnTietChanging(value);
					this.SendPropertyChanging();
					this._Tiet = value;
					this.SendPropertyChanged("Tiet");
					this.OnTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GVIEN", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_GVIEN
		{
			get
			{
				return this._ID_GVIEN;
			}
			set
			{
				if ((this._ID_GVIEN != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_GVIEN = value;
					this.SendPropertyChanged("ID_GVIEN");
					this.OnID_GVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOPHP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_LOPHP
		{
			get
			{
				return this._ID_LOPHP;
			}
			set
			{
				if ((this._ID_LOPHP != value))
				{
					if (this._LOPHOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOPHPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOPHP = value;
					this.SendPropertyChanged("ID_LOPHP");
					this.OnID_LOPHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LICHTHI_TGTHI", Storage="_TGTHIs", ThisKey="ID_LICHTHI", OtherKey="ID_LICHTHI")]
		public EntitySet<TGTHI> TGTHIs
		{
			get
			{
				return this._TGTHIs;
			}
			set
			{
				this._TGTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LICHTHI", Storage="_GIANGVIEN", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.LICHTHIs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.LICHTHIs.Add(this);
						this._ID_GVIEN = value.ID_GVIEN;
					}
					else
					{
						this._ID_GVIEN = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_LICHTHI", Storage="_LOPHOCPHAN", ThisKey="ID_LOPHP", OtherKey="ID_LOPHP", IsForeignKey=true)]
		public LOPHOCPHAN LOPHOCPHAN
		{
			get
			{
				return this._LOPHOCPHAN.Entity;
			}
			set
			{
				LOPHOCPHAN previousValue = this._LOPHOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOCPHAN.Entity = null;
						previousValue.LICHTHIs.Remove(this);
					}
					this._LOPHOCPHAN.Entity = value;
					if ((value != null))
					{
						value.LICHTHIs.Add(this);
						this._ID_LOPHP = value.ID_LOPHP;
					}
					else
					{
						this._ID_LOPHP = default(string);
					}
					this.SendPropertyChanged("LOPHOCPHAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.LICHTHI = this;
		}
		
		private void detach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.LICHTHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOPHOCPHAN")]
	public partial class LOPHOCPHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LOPHP;
		
		private string _TENLOP;
		
		private System.Nullable<int> _SISO;
		
		private string _DIADIEM;
		
		private string _TIETHOC;
		
		private string _ID_MONHOC;
		
		private string _ID_GVIEN;
		
		private string _ID_HOCKY;
		
		private EntitySet<CTLHPHAN> _CTLHPHANs;
		
		private EntitySet<LICHTHI> _LICHTHIs;
		
		private EntitySet<SINHVIEN> _SINHVIENs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
		private EntityRef<HOCKY> _HOCKY;
		
		private EntityRef<MONHOC> _MONHOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LOPHPChanging(string value);
    partial void OnID_LOPHPChanged();
    partial void OnTENLOPChanging(string value);
    partial void OnTENLOPChanged();
    partial void OnSISOChanging(System.Nullable<int> value);
    partial void OnSISOChanged();
    partial void OnDIADIEMChanging(string value);
    partial void OnDIADIEMChanged();
    partial void OnTIETHOCChanging(string value);
    partial void OnTIETHOCChanged();
    partial void OnID_MONHOCChanging(string value);
    partial void OnID_MONHOCChanged();
    partial void OnID_GVIENChanging(string value);
    partial void OnID_GVIENChanged();
    partial void OnID_HOCKYChanging(string value);
    partial void OnID_HOCKYChanged();
    #endregion
		
		public LOPHOCPHAN()
		{
			this._CTLHPHANs = new EntitySet<CTLHPHAN>(new Action<CTLHPHAN>(this.attach_CTLHPHANs), new Action<CTLHPHAN>(this.detach_CTLHPHANs));
			this._LICHTHIs = new EntitySet<LICHTHI>(new Action<LICHTHI>(this.attach_LICHTHIs), new Action<LICHTHI>(this.detach_LICHTHIs));
			this._SINHVIENs = new EntitySet<SINHVIEN>(new Action<SINHVIEN>(this.attach_SINHVIENs), new Action<SINHVIEN>(this.detach_SINHVIENs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			this._HOCKY = default(EntityRef<HOCKY>);
			this._MONHOC = default(EntityRef<MONHOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOPHP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LOPHP
		{
			get
			{
				return this._ID_LOPHP;
			}
			set
			{
				if ((this._ID_LOPHP != value))
				{
					this.OnID_LOPHPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOPHP = value;
					this.SendPropertyChanged("ID_LOPHP");
					this.OnID_LOPHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOP", DbType="NVarChar(50)")]
		public string TENLOP
		{
			get
			{
				return this._TENLOP;
			}
			set
			{
				if ((this._TENLOP != value))
				{
					this.OnTENLOPChanging(value);
					this.SendPropertyChanging();
					this._TENLOP = value;
					this.SendPropertyChanged("TENLOP");
					this.OnTENLOPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SISO", DbType="Int")]
		public System.Nullable<int> SISO
		{
			get
			{
				return this._SISO;
			}
			set
			{
				if ((this._SISO != value))
				{
					this.OnSISOChanging(value);
					this.SendPropertyChanging();
					this._SISO = value;
					this.SendPropertyChanged("SISO");
					this.OnSISOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIADIEM", DbType="NVarChar(20)")]
		public string DIADIEM
		{
			get
			{
				return this._DIADIEM;
			}
			set
			{
				if ((this._DIADIEM != value))
				{
					this.OnDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._DIADIEM = value;
					this.SendPropertyChanged("DIADIEM");
					this.OnDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIETHOC", DbType="NChar(10)")]
		public string TIETHOC
		{
			get
			{
				return this._TIETHOC;
			}
			set
			{
				if ((this._TIETHOC != value))
				{
					this.OnTIETHOCChanging(value);
					this.SendPropertyChanging();
					this._TIETHOC = value;
					this.SendPropertyChanged("TIETHOC");
					this.OnTIETHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MONHOC", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_MONHOC
		{
			get
			{
				return this._ID_MONHOC;
			}
			set
			{
				if ((this._ID_MONHOC != value))
				{
					if (this._MONHOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MONHOCChanging(value);
					this.SendPropertyChanging();
					this._ID_MONHOC = value;
					this.SendPropertyChanged("ID_MONHOC");
					this.OnID_MONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GVIEN", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_GVIEN
		{
			get
			{
				return this._ID_GVIEN;
			}
			set
			{
				if ((this._ID_GVIEN != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_GVIEN = value;
					this.SendPropertyChanged("ID_GVIEN");
					this.OnID_GVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HOCKY", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_HOCKY
		{
			get
			{
				return this._ID_HOCKY;
			}
			set
			{
				if ((this._ID_HOCKY != value))
				{
					if (this._HOCKY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HOCKYChanging(value);
					this.SendPropertyChanging();
					this._ID_HOCKY = value;
					this.SendPropertyChanged("ID_HOCKY");
					this.OnID_HOCKYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_CTLHPHAN", Storage="_CTLHPHANs", ThisKey="ID_LOPHP", OtherKey="ID_LOPHP")]
		public EntitySet<CTLHPHAN> CTLHPHANs
		{
			get
			{
				return this._CTLHPHANs;
			}
			set
			{
				this._CTLHPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_LICHTHI", Storage="_LICHTHIs", ThisKey="ID_LOPHP", OtherKey="ID_LOPHP")]
		public EntitySet<LICHTHI> LICHTHIs
		{
			get
			{
				return this._LICHTHIs;
			}
			set
			{
				this._LICHTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_SINHVIEN", Storage="_SINHVIENs", ThisKey="ID_LOPHP", OtherKey="ID_LOPHP")]
		public EntitySet<SINHVIEN> SINHVIENs
		{
			get
			{
				return this._SINHVIENs;
			}
			set
			{
				this._SINHVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_LOPHOCPHAN", Storage="_GIANGVIEN", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.LOPHOCPHANs.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.LOPHOCPHANs.Add(this);
						this._ID_GVIEN = value.ID_GVIEN;
					}
					else
					{
						this._ID_GVIEN = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOCKY_LOPHOCPHAN", Storage="_HOCKY", ThisKey="ID_HOCKY", OtherKey="ID_HOCKY", IsForeignKey=true)]
		public HOCKY HOCKY
		{
			get
			{
				return this._HOCKY.Entity;
			}
			set
			{
				HOCKY previousValue = this._HOCKY.Entity;
				if (((previousValue != value) 
							|| (this._HOCKY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOCKY.Entity = null;
						previousValue.LOPHOCPHANs.Remove(this);
					}
					this._HOCKY.Entity = value;
					if ((value != null))
					{
						value.LOPHOCPHANs.Add(this);
						this._ID_HOCKY = value.ID_HOCKY;
					}
					else
					{
						this._ID_HOCKY = default(string);
					}
					this.SendPropertyChanged("HOCKY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LOPHOCPHAN", Storage="_MONHOC", ThisKey="ID_MONHOC", OtherKey="ID_MONHOC", IsForeignKey=true)]
		public MONHOC MONHOC
		{
			get
			{
				return this._MONHOC.Entity;
			}
			set
			{
				MONHOC previousValue = this._MONHOC.Entity;
				if (((previousValue != value) 
							|| (this._MONHOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MONHOC.Entity = null;
						previousValue.LOPHOCPHANs.Remove(this);
					}
					this._MONHOC.Entity = value;
					if ((value != null))
					{
						value.LOPHOCPHANs.Add(this);
						this._ID_MONHOC = value.ID_MONHOC;
					}
					else
					{
						this._ID_MONHOC = default(string);
					}
					this.SendPropertyChanged("MONHOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTLHPHANs(CTLHPHAN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = this;
		}
		
		private void detach_CTLHPHANs(CTLHPHAN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = null;
		}
		
		private void attach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = this;
		}
		
		private void detach_LICHTHIs(LICHTHI entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = null;
		}
		
		private void attach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = this;
		}
		
		private void detach_SINHVIENs(SINHVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LOPHOCPHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANHINH")]
	public partial class MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_MANHINH;
		
		private string _TENMANHINH;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MANHINHChanging(int value);
    partial void OnID_MANHINHChanged();
    partial void OnTENMANHINHChanging(string value);
    partial void OnTENMANHINHChanged();
    #endregion
		
		public MANHINH()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MANHINH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MANHINH
		{
			get
			{
				return this._ID_MANHINH;
			}
			set
			{
				if ((this._ID_MANHINH != value))
				{
					this.OnID_MANHINHChanging(value);
					this.SendPropertyChanging();
					this._ID_MANHINH = value;
					this.SendPropertyChanged("ID_MANHINH");
					this.OnID_MANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMANHINH", DbType="NVarChar(100)")]
		public string TENMANHINH
		{
			get
			{
				return this._TENMANHINH;
			}
			set
			{
				if ((this._TENMANHINH != value))
				{
					this.OnTENMANHINHChanging(value);
					this.SendPropertyChanging();
					this._TENMANHINH = value;
					this.SendPropertyChanged("TENMANHINH");
					this.OnTENMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="ID_MANHINH", OtherKey="ID_MANHINH")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONHOC")]
	public partial class MONHOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_MONHOC;
		
		private string _TENMONHOC;
		
		private System.Nullable<int> _TChi;
		
		private string _ID_NHCH;
		
		private string _ID_KHOA;
		
		private EntitySet<LOPHOCPHAN> _LOPHOCPHANs;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<NHCH> _NHCH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MONHOCChanging(string value);
    partial void OnID_MONHOCChanged();
    partial void OnTENMONHOCChanging(string value);
    partial void OnTENMONHOCChanged();
    partial void OnTChiChanging(System.Nullable<int> value);
    partial void OnTChiChanged();
    partial void OnID_NHCHChanging(string value);
    partial void OnID_NHCHChanged();
    partial void OnID_KHOAChanging(string value);
    partial void OnID_KHOAChanged();
    #endregion
		
		public MONHOC()
		{
			this._LOPHOCPHANs = new EntitySet<LOPHOCPHAN>(new Action<LOPHOCPHAN>(this.attach_LOPHOCPHANs), new Action<LOPHOCPHAN>(this.detach_LOPHOCPHANs));
			this._KHOA = default(EntityRef<KHOA>);
			this._NHCH = default(EntityRef<NHCH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MONHOC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_MONHOC
		{
			get
			{
				return this._ID_MONHOC;
			}
			set
			{
				if ((this._ID_MONHOC != value))
				{
					this.OnID_MONHOCChanging(value);
					this.SendPropertyChanging();
					this._ID_MONHOC = value;
					this.SendPropertyChanged("ID_MONHOC");
					this.OnID_MONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMONHOC", DbType="NVarChar(50)")]
		public string TENMONHOC
		{
			get
			{
				return this._TENMONHOC;
			}
			set
			{
				if ((this._TENMONHOC != value))
				{
					this.OnTENMONHOCChanging(value);
					this.SendPropertyChanging();
					this._TENMONHOC = value;
					this.SendPropertyChanged("TENMONHOC");
					this.OnTENMONHOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TChi", DbType="Int")]
		public System.Nullable<int> TChi
		{
			get
			{
				return this._TChi;
			}
			set
			{
				if ((this._TChi != value))
				{
					this.OnTChiChanging(value);
					this.SendPropertyChanging();
					this._TChi = value;
					this.SendPropertyChanged("TChi");
					this.OnTChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHCH", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_NHCH
		{
			get
			{
				return this._ID_NHCH;
			}
			set
			{
				if ((this._ID_NHCH != value))
				{
					if (this._NHCH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NHCHChanging(value);
					this.SendPropertyChanging();
					this._ID_NHCH = value;
					this.SendPropertyChanged("ID_NHCH");
					this.OnID_NHCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOA", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_KHOA
		{
			get
			{
				return this._ID_KHOA;
			}
			set
			{
				if ((this._ID_KHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOAChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOA = value;
					this.SendPropertyChanged("ID_KHOA");
					this.OnID_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MONHOC_LOPHOCPHAN", Storage="_LOPHOCPHANs", ThisKey="ID_MONHOC", OtherKey="ID_MONHOC")]
		public EntitySet<LOPHOCPHAN> LOPHOCPHANs
		{
			get
			{
				return this._LOPHOCPHANs;
			}
			set
			{
				this._LOPHOCPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_MONHOC", Storage="_KHOA", ThisKey="ID_KHOA", OtherKey="ID_KHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._ID_KHOA = value.ID_KHOA;
					}
					else
					{
						this._ID_KHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHCH_MONHOC", Storage="_NHCH", ThisKey="ID_NHCH", OtherKey="ID_NHCH", IsForeignKey=true)]
		public NHCH NHCH
		{
			get
			{
				return this._NHCH.Entity;
			}
			set
			{
				NHCH previousValue = this._NHCH.Entity;
				if (((previousValue != value) 
							|| (this._NHCH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHCH.Entity = null;
						previousValue.MONHOCs.Remove(this);
					}
					this._NHCH.Entity = value;
					if ((value != null))
					{
						value.MONHOCs.Add(this);
						this._ID_NHCH = value.ID_NHCH;
					}
					else
					{
						this._ID_NHCH = default(string);
					}
					this.SendPropertyChanged("NHCH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOPHOCPHANs(LOPHOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = this;
		}
		
		private void detach_LOPHOCPHANs(LOPHOCPHAN entity)
		{
			this.SendPropertyChanging();
			entity.MONHOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUCDO")]
	public partial class MUCDO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_MUCDO;
		
		private string _TENMUCDO;
		
		private EntitySet<CAUHOI> _CAUHOIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MUCDOChanging(string value);
    partial void OnID_MUCDOChanged();
    partial void OnTENMUCDOChanging(string value);
    partial void OnTENMUCDOChanged();
    #endregion
		
		public MUCDO()
		{
			this._CAUHOIs = new EntitySet<CAUHOI>(new Action<CAUHOI>(this.attach_CAUHOIs), new Action<CAUHOI>(this.detach_CAUHOIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MUCDO", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_MUCDO
		{
			get
			{
				return this._ID_MUCDO;
			}
			set
			{
				if ((this._ID_MUCDO != value))
				{
					this.OnID_MUCDOChanging(value);
					this.SendPropertyChanging();
					this._ID_MUCDO = value;
					this.SendPropertyChanged("ID_MUCDO");
					this.OnID_MUCDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMUCDO", DbType="NVarChar(20)")]
		public string TENMUCDO
		{
			get
			{
				return this._TENMUCDO;
			}
			set
			{
				if ((this._TENMUCDO != value))
				{
					this.OnTENMUCDOChanging(value);
					this.SendPropertyChanging();
					this._TENMUCDO = value;
					this.SendPropertyChanged("TENMUCDO");
					this.OnTENMUCDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MUCDO_CAUHOI", Storage="_CAUHOIs", ThisKey="ID_MUCDO", OtherKey="ID_MUCDO")]
		public EntitySet<CAUHOI> CAUHOIs
		{
			get
			{
				return this._CAUHOIs;
			}
			set
			{
				this._CAUHOIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAUHOIs(CAUHOI entity)
		{
			this.SendPropertyChanging();
			entity.MUCDO = this;
		}
		
		private void detach_CAUHOIs(CAUHOI entity)
		{
			this.SendPropertyChanging();
			entity.MUCDO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHCH")]
	public partial class NHCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_NHCH;
		
		private System.Nullable<System.DateTime> _TGCAPNHAT;
		
		private System.Nullable<int> _SLCAUHOI;
		
		private string _ID_GVIEN;
		
		private EntitySet<CAUHOI> _CAUHOIs;
		
		private EntitySet<DETHI> _DETHIs;
		
		private EntitySet<MONHOC> _MONHOCs;
		
		private EntityRef<GIANGVIEN> _GIANGVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NHCHChanging(string value);
    partial void OnID_NHCHChanged();
    partial void OnTGCAPNHATChanging(System.Nullable<System.DateTime> value);
    partial void OnTGCAPNHATChanged();
    partial void OnSLCAUHOIChanging(System.Nullable<int> value);
    partial void OnSLCAUHOIChanged();
    partial void OnID_GVIENChanging(string value);
    partial void OnID_GVIENChanged();
    #endregion
		
		public NHCH()
		{
			this._CAUHOIs = new EntitySet<CAUHOI>(new Action<CAUHOI>(this.attach_CAUHOIs), new Action<CAUHOI>(this.detach_CAUHOIs));
			this._DETHIs = new EntitySet<DETHI>(new Action<DETHI>(this.attach_DETHIs), new Action<DETHI>(this.detach_DETHIs));
			this._MONHOCs = new EntitySet<MONHOC>(new Action<MONHOC>(this.attach_MONHOCs), new Action<MONHOC>(this.detach_MONHOCs));
			this._GIANGVIEN = default(EntityRef<GIANGVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NHCH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_NHCH
		{
			get
			{
				return this._ID_NHCH;
			}
			set
			{
				if ((this._ID_NHCH != value))
				{
					this.OnID_NHCHChanging(value);
					this.SendPropertyChanging();
					this._ID_NHCH = value;
					this.SendPropertyChanged("ID_NHCH");
					this.OnID_NHCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGCAPNHAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGCAPNHAT
		{
			get
			{
				return this._TGCAPNHAT;
			}
			set
			{
				if ((this._TGCAPNHAT != value))
				{
					this.OnTGCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._TGCAPNHAT = value;
					this.SendPropertyChanged("TGCAPNHAT");
					this.OnTGCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLCAUHOI", DbType="Int")]
		public System.Nullable<int> SLCAUHOI
		{
			get
			{
				return this._SLCAUHOI;
			}
			set
			{
				if ((this._SLCAUHOI != value))
				{
					this.OnSLCAUHOIChanging(value);
					this.SendPropertyChanging();
					this._SLCAUHOI = value;
					this.SendPropertyChanged("SLCAUHOI");
					this.OnSLCAUHOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_GVIEN", DbType="Char(10)")]
		public string ID_GVIEN
		{
			get
			{
				return this._ID_GVIEN;
			}
			set
			{
				if ((this._ID_GVIEN != value))
				{
					if (this._GIANGVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_GVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_GVIEN = value;
					this.SendPropertyChanged("ID_GVIEN");
					this.OnID_GVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHCH_CAUHOI", Storage="_CAUHOIs", ThisKey="ID_NHCH", OtherKey="ID_NHCH")]
		public EntitySet<CAUHOI> CAUHOIs
		{
			get
			{
				return this._CAUHOIs;
			}
			set
			{
				this._CAUHOIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHCH_DETHI", Storage="_DETHIs", ThisKey="ID_NHCH", OtherKey="ID_NHCH")]
		public EntitySet<DETHI> DETHIs
		{
			get
			{
				return this._DETHIs;
			}
			set
			{
				this._DETHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHCH_MONHOC", Storage="_MONHOCs", ThisKey="ID_NHCH", OtherKey="ID_NHCH")]
		public EntitySet<MONHOC> MONHOCs
		{
			get
			{
				return this._MONHOCs;
			}
			set
			{
				this._MONHOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIANGVIEN_NHCH", Storage="_GIANGVIEN", ThisKey="ID_GVIEN", OtherKey="ID_GVIEN", IsForeignKey=true)]
		public GIANGVIEN GIANGVIEN
		{
			get
			{
				return this._GIANGVIEN.Entity;
			}
			set
			{
				GIANGVIEN previousValue = this._GIANGVIEN.Entity;
				if (((previousValue != value) 
							|| (this._GIANGVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIANGVIEN.Entity = null;
						previousValue.NHCHes.Remove(this);
					}
					this._GIANGVIEN.Entity = value;
					if ((value != null))
					{
						value.NHCHes.Add(this);
						this._ID_GVIEN = value.ID_GVIEN;
					}
					else
					{
						this._ID_GVIEN = default(string);
					}
					this.SendPropertyChanged("GIANGVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CAUHOIs(CAUHOI entity)
		{
			this.SendPropertyChanging();
			entity.NHCH = this;
		}
		
		private void detach_CAUHOIs(CAUHOI entity)
		{
			this.SendPropertyChanging();
			entity.NHCH = null;
		}
		
		private void attach_DETHIs(DETHI entity)
		{
			this.SendPropertyChanging();
			entity.NHCH = this;
		}
		
		private void detach_DETHIs(DETHI entity)
		{
			this.SendPropertyChanging();
			entity.NHCH = null;
		}
		
		private void attach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.NHCH = this;
		}
		
		private void detach_MONHOCs(MONHOC entity)
		{
			this.SendPropertyChanging();
			entity.NHCH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CVU;
		
		private int _ID_MANHINH;
		
		private System.Nullable<bool> _COQUYEN;
		
		private EntityRef<MANHINH> _MANHINH;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CVUChanging(string value);
    partial void OnID_CVUChanged();
    partial void OnID_MANHINHChanging(int value);
    partial void OnID_MANHINHChanged();
    partial void OnCOQUYENChanging(System.Nullable<bool> value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._MANHINH = default(EntityRef<MANHINH>);
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CVU", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CVU
		{
			get
			{
				return this._ID_CVU;
			}
			set
			{
				if ((this._ID_CVU != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CVUChanging(value);
					this.SendPropertyChanging();
					this._ID_CVU = value;
					this.SendPropertyChanged("ID_CVU");
					this.OnID_CVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MANHINH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_MANHINH
		{
			get
			{
				return this._ID_MANHINH;
			}
			set
			{
				if ((this._ID_MANHINH != value))
				{
					if (this._MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MANHINHChanging(value);
					this.SendPropertyChanging();
					this._ID_MANHINH = value;
					this.SendPropertyChanged("ID_MANHINH");
					this.OnID_MANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit")]
		public System.Nullable<bool> COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_MANHINH", ThisKey="ID_MANHINH", OtherKey="ID_MANHINH", IsForeignKey=true)]
		public MANHINH MANHINH
		{
			get
			{
				return this._MANHINH.Entity;
			}
			set
			{
				MANHINH previousValue = this._MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANHINH.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._MANHINH.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._ID_MANHINH = value.ID_MANHINH;
					}
					else
					{
						this._ID_MANHINH = default(int);
					}
					this.SendPropertyChanged("MANHINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_PHANQUYEN", Storage="_CHUCVU", ThisKey="ID_CVU", OtherKey="ID_CVU", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._ID_CVU = value.ID_CVU;
					}
					else
					{
						this._ID_CVU = default(string);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGTHI")]
	public partial class PHONGTHI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_PHONGTHI;
		
		private string _TENPHONG;
		
		private EntitySet<TGTHI> _TGTHIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PHONGTHIChanging(string value);
    partial void OnID_PHONGTHIChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    #endregion
		
		public PHONGTHI()
		{
			this._TGTHIs = new EntitySet<TGTHI>(new Action<TGTHI>(this.attach_TGTHIs), new Action<TGTHI>(this.detach_TGTHIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PHONGTHI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_PHONGTHI
		{
			get
			{
				return this._ID_PHONGTHI;
			}
			set
			{
				if ((this._ID_PHONGTHI != value))
				{
					this.OnID_PHONGTHIChanging(value);
					this.SendPropertyChanging();
					this._ID_PHONGTHI = value;
					this.SendPropertyChanged("ID_PHONGTHI");
					this.OnID_PHONGTHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(30)")]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGTHI_TGTHI", Storage="_TGTHIs", ThisKey="ID_PHONGTHI", OtherKey="ID_PHONGTHI")]
		public EntitySet<TGTHI> TGTHIs
		{
			get
			{
				return this._TGTHIs;
			}
			set
			{
				this._TGTHIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGTHI = this;
		}
		
		private void detach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.PHONGTHI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SINHVIEN")]
	public partial class SINHVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_SVIEN;
		
		private string _PASSSVIEN;
		
		private string _TENSV;
		
		private string _HINHSV;
		
		private System.Nullable<System.DateTime> _NAMSINH;
		
		private string _GIOITINH;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _CMND;
		
		private string _QUEQUAN;
		
		private System.Nullable<int> _TTrang;
		
		private string _ID_LOPHP;
		
		private string _ID_KHOA;
		
		private EntitySet<TGTHI> _TGTHIs;
		
		private EntitySet<CTLHPHAN> _CTLHPHANs;
		
		private EntityRef<KHOA> _KHOA;
		
		private EntityRef<LOPHOCPHAN> _LOPHOCPHAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SVIENChanging(string value);
    partial void OnID_SVIENChanged();
    partial void OnPASSSVIENChanging(string value);
    partial void OnPASSSVIENChanged();
    partial void OnTENSVChanging(string value);
    partial void OnTENSVChanged();
    partial void OnHINHSVChanging(string value);
    partial void OnHINHSVChanged();
    partial void OnNAMSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNAMSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnQUEQUANChanging(string value);
    partial void OnQUEQUANChanged();
    partial void OnTTrangChanging(System.Nullable<int> value);
    partial void OnTTrangChanged();
    partial void OnID_LOPHPChanging(string value);
    partial void OnID_LOPHPChanged();
    partial void OnID_KHOAChanging(string value);
    partial void OnID_KHOAChanged();
    #endregion
		
		public SINHVIEN()
		{
			this._TGTHIs = new EntitySet<TGTHI>(new Action<TGTHI>(this.attach_TGTHIs), new Action<TGTHI>(this.detach_TGTHIs));
			this._CTLHPHANs = new EntitySet<CTLHPHAN>(new Action<CTLHPHAN>(this.attach_CTLHPHANs), new Action<CTLHPHAN>(this.detach_CTLHPHANs));
			this._KHOA = default(EntityRef<KHOA>);
			this._LOPHOCPHAN = default(EntityRef<LOPHOCPHAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SVIEN", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SVIEN
		{
			get
			{
				return this._ID_SVIEN;
			}
			set
			{
				if ((this._ID_SVIEN != value))
				{
					this.OnID_SVIENChanging(value);
					this.SendPropertyChanging();
					this._ID_SVIEN = value;
					this.SendPropertyChanged("ID_SVIEN");
					this.OnID_SVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSSVIEN", DbType="NVarChar(30)")]
		public string PASSSVIEN
		{
			get
			{
				return this._PASSSVIEN;
			}
			set
			{
				if ((this._PASSSVIEN != value))
				{
					this.OnPASSSVIENChanging(value);
					this.SendPropertyChanging();
					this._PASSSVIEN = value;
					this.SendPropertyChanged("PASSSVIEN");
					this.OnPASSSVIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSV", DbType="NVarChar(50)")]
		public string TENSV
		{
			get
			{
				return this._TENSV;
			}
			set
			{
				if ((this._TENSV != value))
				{
					this.OnTENSVChanging(value);
					this.SendPropertyChanging();
					this._TENSV = value;
					this.SendPropertyChanged("TENSV");
					this.OnTENSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHSV", DbType="NVarChar(100)")]
		public string HINHSV
		{
			get
			{
				return this._HINHSV;
			}
			set
			{
				if ((this._HINHSV != value))
				{
					this.OnHINHSVChanging(value);
					this.SendPropertyChanging();
					this._HINHSV = value;
					this.SendPropertyChanged("HINHSV");
					this.OnHINHSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NAMSINH
		{
			get
			{
				return this._NAMSINH;
			}
			set
			{
				if ((this._NAMSINH != value))
				{
					this.OnNAMSINHChanging(value);
					this.SendPropertyChanging();
					this._NAMSINH = value;
					this.SendPropertyChanged("NAMSINH");
					this.OnNAMSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(12)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NChar(11)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUEQUAN", DbType="NVarChar(100)")]
		public string QUEQUAN
		{
			get
			{
				return this._QUEQUAN;
			}
			set
			{
				if ((this._QUEQUAN != value))
				{
					this.OnQUEQUANChanging(value);
					this.SendPropertyChanging();
					this._QUEQUAN = value;
					this.SendPropertyChanged("QUEQUAN");
					this.OnQUEQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTrang", DbType="Int")]
		public System.Nullable<int> TTrang
		{
			get
			{
				return this._TTrang;
			}
			set
			{
				if ((this._TTrang != value))
				{
					this.OnTTrangChanging(value);
					this.SendPropertyChanging();
					this._TTrang = value;
					this.SendPropertyChanged("TTrang");
					this.OnTTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOPHP", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_LOPHP
		{
			get
			{
				return this._ID_LOPHP;
			}
			set
			{
				if ((this._ID_LOPHP != value))
				{
					if (this._LOPHOCPHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOPHPChanging(value);
					this.SendPropertyChanging();
					this._ID_LOPHP = value;
					this.SendPropertyChanged("ID_LOPHP");
					this.OnID_LOPHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KHOA", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_KHOA
		{
			get
			{
				return this._ID_KHOA;
			}
			set
			{
				if ((this._ID_KHOA != value))
				{
					if (this._KHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHOAChanging(value);
					this.SendPropertyChanging();
					this._ID_KHOA = value;
					this.SendPropertyChanged("ID_KHOA");
					this.OnID_KHOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_TGTHI", Storage="_TGTHIs", ThisKey="ID_SVIEN", OtherKey="ID_SVIEN")]
		public EntitySet<TGTHI> TGTHIs
		{
			get
			{
				return this._TGTHIs;
			}
			set
			{
				this._TGTHIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SINHVIEN_CTLHPHAN", Storage="_CTLHPHANs", ThisKey="ID_SVIEN", OtherKey="ID_SVIEN")]
		public EntitySet<CTLHPHAN> CTLHPHANs
		{
			get
			{
				return this._CTLHPHANs;
			}
			set
			{
				this._CTLHPHANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHOA_SINHVIEN", Storage="_KHOA", ThisKey="ID_KHOA", OtherKey="ID_KHOA", IsForeignKey=true)]
		public KHOA KHOA
		{
			get
			{
				return this._KHOA.Entity;
			}
			set
			{
				KHOA previousValue = this._KHOA.Entity;
				if (((previousValue != value) 
							|| (this._KHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHOA.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._KHOA.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._ID_KHOA = value.ID_KHOA;
					}
					else
					{
						this._ID_KHOA = default(string);
					}
					this.SendPropertyChanged("KHOA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOPHOCPHAN_SINHVIEN", Storage="_LOPHOCPHAN", ThisKey="ID_LOPHP", OtherKey="ID_LOPHP", IsForeignKey=true)]
		public LOPHOCPHAN LOPHOCPHAN
		{
			get
			{
				return this._LOPHOCPHAN.Entity;
			}
			set
			{
				LOPHOCPHAN previousValue = this._LOPHOCPHAN.Entity;
				if (((previousValue != value) 
							|| (this._LOPHOCPHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOPHOCPHAN.Entity = null;
						previousValue.SINHVIENs.Remove(this);
					}
					this._LOPHOCPHAN.Entity = value;
					if ((value != null))
					{
						value.SINHVIENs.Add(this);
						this._ID_LOPHP = value.ID_LOPHP;
					}
					else
					{
						this._ID_LOPHP = default(string);
					}
					this.SendPropertyChanged("LOPHOCPHAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_TGTHIs(TGTHI entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
		
		private void attach_CTLHPHANs(CTLHPHAN entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = this;
		}
		
		private void detach_CTLHPHANs(CTLHPHAN entity)
		{
			this.SendPropertyChanging();
			entity.SINHVIEN = null;
		}
	}
}
#pragma warning restore 1591
